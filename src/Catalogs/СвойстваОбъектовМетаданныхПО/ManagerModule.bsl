#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбновитьДанныеСправочника() Экспорт
	
	НачатьТранзакцию();
	
	// Блокировка
	Блокировка = Новый БлокировкаДанных();
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ОбъектыМетаданныхПО");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	ЭлементБлокировки = Блокировка.Добавить("Справочник.СвойстваОбъектовМетаданныхПО");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	Блокировка.Заблокировать();
	// Конец Блокировка
	
	КоллекцияСвойств = СформироватьКоллекциюСвойствОбъектовМетаданных();
	
	ЗаписатьКоллекциюСвойствОбъектовМетаданных(КоллекцияСвойств);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныеПроцедурыИФункции

#Область ФормированиеКоллекцииСвойствОбъектовМетаданных

Функция НовыйКоллекцияСвойствОбъектовМетаданных()
	
	ОписаниеТиповОбъектМетаданных	= Новый ОписаниеТипов("СправочникСсылка.ОбъектыМетаданныхПО");
	ОписаниеТиповСтрока50 			= Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50));
	ОписаниеТиповСтрока100 			= Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100));
	ОписаниеТиповБулево				= Новый ОписаниеТипов("Булево");
	ОписаниеТиповМассив				= Новый ОписаниеТипов("Массив");
	
	Коллекция = Новый ТаблицаЗначений();
	Коллекция.Колонки.Добавить("ОбъектМетаданных",	ОписаниеТиповОбъектМетаданных);
	Коллекция.Колонки.Добавить("Имя",				ОписаниеТиповСтрока50);
	Коллекция.Колонки.Добавить("ПолноеИмя",			ОписаниеТиповСтрока100);
	Коллекция.Колонки.Добавить("Синоним",			ОписаниеТиповСтрока50);
	Коллекция.Колонки.Добавить("ЭтоГруппа",			ОписаниеТиповБулево);
	Коллекция.Колонки.Добавить("РодительПолноеИмя",	ОписаниеТиповСтрока100);
	Коллекция.Колонки.Добавить("Типы",				ОписаниеТиповМассив);
	
	Возврат Коллекция;
	
КонецФункции

Функция СформироватьКоллекциюСвойствОбъектовМетаданных()
	
	Коллекция = НовыйКоллекцияСвойствОбъектовМетаданных();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбъектыМетаданныхПО.Ссылка КАК ОбъектМетаданных,
		|	ОбъектыМетаданныхПО.ПолноеИмя КАК ОбъектМетаданныхПолноеИмя
		|ИЗ
		|	Справочник.ОбъектыМетаданныхПО КАК ОбъектыМетаданныхПО
		|ГДЕ
		|	НЕ ОбъектыМетаданныхПО.ПометкаУдаления
		|	И ОбъектыМетаданныхПО.Родитель <> ЗНАЧЕНИЕ(Справочник.ОбъектыМетаданныхПО.ПустаяСсылка)";
		
	СоответствиеОбъектыМетаданных = Новый Соответствие;
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПолноеИмя = Выборка.ОбъектМетаданныхПолноеИмя;		
		
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);
		ОбъектМетаданныхСсылка = Выборка.ОбъектМетаданных;
		
		СоответствиеОбъектыМетаданных.Вставить(ОбъектМетаданныхСсылка, ОбъектМетаданных);
		
	КонецЦикла;
	
	МаппингТипов = МаппингТиповСвойств();
	
	Для Каждого КлючИЗначение Из СоответствиеОбъектыМетаданных Цикл
		
		ОбъектМетаданных = КлючИЗначение.Значение;
		ОбъектМетаданныхСсылка = КлючИЗначение.Ключ;
		
		Если (ЭтоСсылочныйОбъектМетаданных(ОбъектМетаданных)) Тогда
			
			ДобавитьСвойстваСсылочногоОбъекта(
				Коллекция, ОбъектМетаданных, ОбъектМетаданныхСсылка, МаппингТипов);
				
		ИначеЕсли (ЭтоРегистр(ОбъектМетаданных)) Тогда
			 
			ДобавитьСвойстваРегистра(Коллекция, ОбъектМетаданных, ОбъектМетаданныхСсылка, МаппингТипов);
			
		Иначе
			
			ВызватьИсключение НСтр("ru = 'Неожиданный тип объекта метаданных'");
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Коллекция;
	
КонецФункции

Функция ТипПоОбъектуМетаданных(ОбъектМетаданных)
	
	Если Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
		
		Шаблон = "СправочникСсылка.%1";
		
	ИначеЕсли Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда
		 
		 Шаблон = "ДокументСсылка.%1";
		 
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Неожиданный тип данных'");
		
	КонецЕсли;
	
	Возврат Тип(СтрШаблон(Шаблон, ОбъектМетаданных.Имя));
	
КонецФункции

// Маппинг, позволяющий определить ссылку на объект метаданных по типу.
// 
// Возвращаемое значение: Соответствие - Маппинг:
// 	* Ключ - Тип - Тип.
// 	* Значение - СправочникСсылка.ОбъектыМетаданныхПО
// 	
Функция МаппингТиповСвойств()
	
	Результат = Новый Соответствие();
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОбъектыМетаданныхПО.Ссылка,
		|	ОбъектыМетаданныхПО.ПолноеИмя
		|ИЗ
		|	Справочник.ОбъектыМетаданныхПО КАК ОбъектыМетаданныхПО
		|ГДЕ
		|	НЕ ОбъектыМетаданныхПО.ПометкаУдаления
		|	И
		|	НЕ ОбъектыМетаданныхПО.ЭтоГруппа");
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ПолноеИмя = Выборка.ПолноеИмя;
		
		Если (СтрНайти(ПолноеИмя, "Справочник.") = 0 И СтрНайти(ПолноеИмя, "Документ") = 0) Тогда
			Продолжить;
		КонецЕсли;
		
		ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);
		Тип = ТипПоОбъектуМетаданных(ОбъектМетаданных);
		
		Результат.Вставить(Тип, Выборка.Ссылка);
				
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьСвойстваСсылочногоОбъекта(КоллекцияСвойств, ОбъектМетаданных, ОбъектМетаданныхСсылка, МаппингТипов)
	
	// Ссылка
	ДанныеСвойства = Новый Структура();
	ДанныеСвойства.Вставить("ОбъектМетаданных",	ОбъектМетаданныхСсылка);
	ДанныеСвойства.Вставить("Имя",				"Ссылка");
	
	ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
	
	// Реквизиты
	Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл		
			
		ДанныеСвойства = Новый Структура();
		ДанныеСвойства.Вставить("ОбъектМетаданных",	ОбъектМетаданныхСсылка);
		ДанныеСвойства.Вставить("Имя",				Реквизит.Имя);
		ДанныеСвойства.Вставить("Синоним",			Реквизит.Синоним);
		ДанныеСвойства.Вставить("ТипСвойства",		Реквизит.Тип);
		
		ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
		
	КонецЦикла;
	
	// Табличные части
	Для Каждого ТабличнаяЧасть Из ОбъектМетаданных.ТабличныеЧасти Цикл
		
		ДобавлятьТЧ = Ложь;			
		Для Каждого КолонкаТЧ Из ТабличнаяЧасть.Реквизиты Цикл
			
			ДанныеСвойства = Новый Структура();
			ДанныеСвойства.Вставить("ОбъектМетаданных", 	ОбъектМетаданныхСсылка);
			ДанныеСвойства.Вставить("Имя",					КолонкаТЧ.Имя);
			ДанныеСвойства.Вставить("ПолноеИмя",			ТабличнаяЧасть.Имя + "." + КолонкаТЧ.Имя);
			ДанныеСвойства.Вставить("Синоним",				КолонкаТЧ.Синоним);
			ДанныеСвойства.Вставить("РодительПолноеИмя",	ТабличнаяЧасть.Имя);
			ДанныеСвойства.Вставить("ТипСвойства",			КолонкаТЧ.Тип);
			
			СвойствоДобавлено = ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(
				КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
				
			ДобавлятьТЧ = ДобавлятьТЧ Или СвойствоДобавлено;
			
		КонецЦикла;
		
		Если (ДобавлятьТЧ) Тогда
			
			ДанныеСвойства = Новый Структура();
			ДанныеСвойства.Вставить("ОбъектМетаданных",	ОбъектМетаданныхСсылка);
			ДанныеСвойства.Вставить("Имя",				ТабличнаяЧасть.Имя);
			ДанныеСвойства.Вставить("ЭтоГруппа",		Истина);
			
			ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьСвойстваРегистра(КоллекцияСвойств, ОбъектМетаданных, ОбъектМетаданныхСсылка, МаппингТипов)
	
	Для Каждого Измерение Из ОбъектМетаданных.Измерения Цикл
		
		ДанныеСвойства = Новый Структура();
		ДанныеСвойства.Вставить("ОбъектМетаданных",	ОбъектМетаданныхСсылка);
		ДанныеСвойства.Вставить("Имя",				Измерение.Имя);
		ДанныеСвойства.Вставить("Синоним",			Измерение.Синоним);
		ДанныеСвойства.Вставить("ТипСвойства",		Измерение.Тип);
		
		ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
		
	КонецЦикла;
	
	Для Каждого Ресурс Из ОбъектМетаданных.Ресурсы Цикл
		
		ДанныеСвойства = Новый Структура();
		ДанныеСвойства.Вставить("ОбъектМетаданных",	ОбъектМетаданныхСсылка);
		ДанныеСвойства.Вставить("Имя",				Ресурс.Имя);
		ДанныеСвойства.Вставить("Синоним",			Ресурс.Синоним);
		ДанныеСвойства.Вставить("ТипСвойства",		Ресурс.Тип);
		
		ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
		
	КонецЦикла;
	
	Для Каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
		
		ДанныеСвойства = Новый Структура();
		ДанныеСвойства.Вставить("ОбъектМетаданных",	ОбъектМетаданныхСсылка);
		ДанныеСвойства.Вставить("Имя",				Реквизит.Имя);
		ДанныеСвойства.Вставить("Синоним",			Реквизит.Синоним);
		ДанныеСвойства.Вставить("ТипСвойства",		Реквизит.Тип);
		
		ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДобавитьПриНеобходимостиСвойствоВКоллекциюСвойств(КоллекцияСвойств, ДанныеСвойства, МаппингТипов)
	
	Перем ПолноеИмя, Синоним, ЭтоГруппа, РодительПолноеИмя, ТипСвойства;
	
	ОбъектМетаданных	= ДанныеСвойства.ОбъектМетаданных;
	Имя					= ДанныеСвойства.Имя;
	
	ДанныеСвойства.Свойство("ПолноеИмя",			ПолноеИмя);
	ДанныеСвойства.Свойство("Синоним",				Синоним);
	ДанныеСвойства.Свойство("ЭтоГруппа",			ЭтоГруппа);
	ДанныеСвойства.Свойство("ТипСвойства",			ТипСвойства);
	ДанныеСвойства.Свойство("РодительПолноеИмя",	РодительПолноеИмя);
	
	Если (ПолноеИмя = Неопределено) Тогда
		ПолноеИмя = Имя;
	КонецЕсли;
	
	Если (Синоним = Неопределено) Тогда
		Синоним = Имя;
	КонецЕсли;
	
	Если (ЭтоГруппа = Неопределено) Тогда
		ЭтоГруппа = Ложь;
	КонецЕсли;
	
	Если (Не ЭтоГруппа И ТипСвойства = Неопределено И НРег(Имя) <> "ссылка") Тогда
		ВызватьИсключение НСтр("ru = 'Некорректное свойство: не задан ключ ""ТипСвойства"".'");
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда
		Если (НРег(Имя) = "ссылка") Тогда
			ТипаСвойстваКакМассивСсылок = Новый Массив();
			ТипаСвойстваКакМассивСсылок.Добавить(ОбъектМетаданных);
		Иначе
			ТипаСвойстваКакМассивСсылок = МассивСсылокНаОбъектыМетаданныхПоОписаниюТипов(ТипСвойства, МаппингТипов);
		КонецЕсли;
	КонецЕсли;
	
	Если (ЭтоГруппа) Или (ТипаСвойстваКакМассивСсылок.Количество() > 0) Тогда
		
		НоваяСтрока = КоллекцияСвойств.Добавить();
		НоваяСтрока.ОбъектМетаданных	= ОбъектМетаданных;
		НоваяСтрока.Имя					= Имя;
		НоваяСтрока.ПолноеИмя			= ПолноеИмя;
		НоваяСтрока.Синоним				= Синоним;
		НоваяСтрока.ЭтоГруппа			= ЭтоГруппа;
		НоваяСтрока.РодительПолноеИмя	= РодительПолноеИмя;
		
		Если (Не ЭтоГруппа) Тогда
			НоваяСтрока.Типы = ТипаСвойстваКакМассивСсылок;
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция МассивСсылокНаОбъектыМетаданныхПоОписаниюТипов(ОписаниеТипов, МаппингТипов)
	
	Результат = Новый Массив();
	
	Для Каждого ТекущийТип Из ОписаниеТипов.Типы() Цикл
		
		ТекущаяСсылка = МаппингТипов[ТекущийТип];
		Если (ТекущаяСсылка <> Неопределено) Тогда
			Результат.Добавить(ТекущаяСсылка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ЗаписьКоллекцииСвойствоОбъектовМетаданных

Процедура ЗаписатьКоллекциюСвойствОбъектовМетаданных(КоллекцияСвойств)
	
	ДанныеРасчета = РассчитатьДляЗаписиКоллекциюСвойствОбъектовМетаданных(КоллекцияСвойств);

	СоздатьНовыеЭлементыСвойствОбъектовМетаданных(ДанныеРасчета);	
	
	ОбновитьЭлементыСвойствОбъектовМетаданных(ДанныеРасчета);
	
	ПометитьНаУдалениеЭлементыСвойствОбъектовМетаданных(ДанныеРасчета);		
	
КонецПроцедуры

Функция РассчитатьДляЗаписиКоллекциюСвойствОбъектовМетаданных(КоллекцияСвойств)
	
	Результат = Новый Структура("ВыборкаСоздать, ВыборкаОбновить, ВыборкаПометитьНаУдаление, ВыборкаТипыСвойств");
	
	// Вспомогательные переменные
	ОписаниеТиповСтрока255 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(255));
	ОписаниеТиповОбъектМетаданныхПО = Новый ОписаниеТипов("СправочникСсылка.ОбъектыМетаданныхПО");
	ОписаниеТиповСвойстваОбъектовМетаданныхПО = Новый ОписаниеТипов("СправочникСсылка.СвойстваОбъектовМетаданныхПО");
	
	// Подготовка коллекции свойств
	ПодготовленнаяКоллекция = КоллекцияСвойств.Скопировать();
	ПодготовленнаяКоллекция.Колонки.Добавить("ВозможнаяНоваяСсылка", ОписаниеТиповСвойстваОбъектовМетаданныхПО);
	
	// Если в новых элементах подчиненного справочника указывать родителя с незаполненным владельцем (битой ссылкой),
	// то возникнет ошибка "Значение поля "Владелец" не заполнено или заполнено неверно". Поэтому выполним сортировку
	// по колонке "ЭтоГруппа" (по убыванию). Таким образом сначала создадутся группы свойств.
	ПодготовленнаяКоллекция.Сортировать("ОбъектМетаданных, ЭтоГруппа Убыв");		
	
	Для Каждого ЭлементКоллекции Из ПодготовленнаяКоллекция Цикл
		
		ГУИД = Новый УникальныйИдентификатор();
		ЭлементКоллекции.ВозможнаяНоваяСсылка = Справочники.СвойстваОбъектовМетаданныхПО.ПолучитьСсылку(ГУИД); 
		
	КонецЦикла;
	
	// Формирование таблицы типов свойств
	ТипыСвойств = Новый ТаблицаЗначений();
	ТипыСвойств.Колонки.Добавить("ОбъектМетаданных",	ОписаниеТиповОбъектМетаданныхПО);
	ТипыСвойств.Колонки.Добавить("ПолноеИмяСвойства",	ОписаниеТиповСтрока255);
	ТипыСвойств.Колонки.Добавить("Тип",					ОписаниеТиповОбъектМетаданныхПО);
	
	Для Каждого ЭлементКоллекции Из КоллекцияСвойств Цикл
		Для Каждого ТекущийТип Из ЭлементКоллекции.Типы Цикл
			
			НоваяСтрока = ТипыСвойств.Добавить();
			НоваяСтрока.ОбъектМетаданных	= ЭлементКоллекции.ОбъектМетаданных;
			НоваяСтрока.ПолноеИмяСвойства	= ЭлементКоллекции.ПолноеИмя;
			НоваяСтрока.Тип					= ТекущийТип;
			
		КонецЦикла;
	КонецЦикла;
	 
	// Создание временных таблиц
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СоздатьВТ_КоллекцияСвойств	(ПодготовленнаяКоллекция,	МенеджерВременныхТаблиц);
	СоздатьВТ_ТипыСвойств		(ТипыСвойств,				МенеджерВременныхТаблиц);
	
	// Формирование запроса
	Подзапросы = Новый Массив;
	Подзапросы.Добавить(ТекстЗапроса_НовыеЭлементы());
	Подзапросы.Добавить(ТекстЗапроса_ЭлементыОбновить());
	Подзапросы.Добавить(ТекстЗапроса_НеактуальныеЭлементы());
	Подзапросы.Добавить(ТекстЗапроса_ТипыСвойств());
	
	ТекстЗапроса = СтрСоединить(Подзапросы, РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;			
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Результат.ВыборкаСоздать				= РезультатыЗапроса[0].Выбрать();
	Результат.ВыборкаОбновить				= РезультатыЗапроса[1].Выбрать();
	Результат.ВыборкаПометитьНаУдаление		= РезультатыЗапроса[2].Выбрать();
	Результат.ВыборкаТипыСвойств			= РезультатыЗапроса[3].Выбрать();
	
	Возврат Результат;
	
КонецФункции

Процедура СоздатьНовыеЭлементыСвойствОбъектовМетаданных(ДанныеРасчета)
	
	ВыборкаСоздать = ДанныеРасчета.ВыборкаСоздать;
	ВыборкаТипыСвойств = ДанныеРасчета.ВыборкаТипыСвойств;
	
	Пока ВыборкаСоздать.Следующий() Цикл
		
		НовыйЭлемент = ?(ВыборкаСоздать.ЭтоГруппа,
			Справочники.СвойстваОбъектовМетаданныхПО.СоздатьГруппу(),
			Справочники.СвойстваОбъектовМетаданныхПО.СоздатьЭлемент());
			
		НовыйЭлемент.УстановитьСсылкуНового(ВыборкаСоздать.Ссылка);
			
		НовыйЭлемент.Владелец		= ВыборкаСоздать.ОбъектМетаданных;
		НовыйЭлемент.Наименование	= ВыборкаСоздать.Имя;
		НовыйЭлемент.ПолноеИмя		= ВыборкаСоздать.ПолноеИмя;
		НовыйЭлемент.Синоним		= ВыборкаСоздать.Синоним;
		НовыйЭлемент.Родитель		= ВыборкаСоздать.Родитель;
		
		// Заполнение типов
		ОтборТипов = Новый Структура();
		ОтборТипов.Вставить("ОбъектМетаданных", 	ВыборкаСоздать.ОбъектМетаданных);
		ОтборТипов.Вставить("ПолноеИмяСвойства",	ВыборкаСоздать.ПолноеИмя);
		
		ВыборкаТипыСвойств.Сбросить();
		Пока ВыборкаТипыСвойств.НайтиСледующий(ОтборТипов) Цикл
			НоваяСтрока = НовыйЭлемент.Типы.Добавить();
			НоваяСтрока.Тип = ВыборкаТипыСвойств.Тип;
		КонецЦикла;
		// Конец Заполнение типов
		
		НовыйЭлемент.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьЭлементыСвойствОбъектовМетаданных(ДанныеРасчета)
	
	ВыборкаОбновить = ДанныеРасчета.ВыборкаОбновить;
	ВыборкаТипыСвойств = ДанныеРасчета.ВыборкаТипыСвойств;
	
	Пока ВыборкаОбновить.Следующий() Цикл
		
		ОбъектСправочника = ВыборкаОбновить.Ссылка.ПолучитьОбъект();
		
		ОбъектСправочника.Синоним		= ВыборкаОбновить.Синоним;
		
		// Заполнение типов
		ОбъектСправочника.Типы.Очистить();
		
		ОтборТипов = Новый Структура();
		ОтборТипов.Вставить("ОбъектМетаданных", 	ВыборкаОбновить.ОбъектМетаданных);
		ОтборТипов.Вставить("ПолноеИмяСвойства",	ВыборкаОбновить.ПолноеИмя);
		
		ВыборкаТипыСвойств.Сбросить();
		Пока ВыборкаТипыСвойств.НайтиСледующий(ОтборТипов) Цикл
			НоваяСтрока 	= ОбъектСправочника.Типы.Добавить();
			НоваяСтрока.Тип = ВыборкаТипыСвойств.Тип;
		КонецЦикла;
		// Конец Заполнение типов
					
		ОбъектСправочника.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПометитьНаУдалениеЭлементыСвойствОбъектовМетаданных(ДанныеРасчета)
	
	ВыборкаПометитьНаУдаление = ДанныеРасчета.ВыборкаПометитьНаУдаление;
	
	Пока ВыборкаПометитьНаУдаление.Следующий() Цикл
		
		ОбъектСправочника = ВыборкаПометитьНаУдаление.Ссылка.ПолучитьОбъект();
		ОбъектСправочника.УстановитьПометкуУдаления(Истина, Ложь);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура СоздатьВТ_КоллекцияСвойств(КоллекцияСвойств, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("КоллекцияСвойств", КоллекцияСвойств);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КоллекцияСвойств.ОбъектМетаданных КАК ОбъектМетаданных,
		|	КоллекцияСвойств.Имя КАК Имя,
		|	КоллекцияСвойств.ПолноеИмя КАК ПолноеИмя,
		|	КоллекцияСвойств.Синоним КАК Синоним,
		|	КоллекцияСвойств.ЭтоГруппа КАК ЭтоГруппа,
		|	КоллекцияСвойств.РодительПолноеИмя КАК РодительПолноеИмя,
		|	КоллекцияСвойств.ВозможнаяНоваяСсылка КАК ВозможнаяНоваяСсылка
		|ПОМЕСТИТЬ ВТ_КоллекцияСвойств_Временная
		|ИЗ
		|	&КоллекцияСвойств КАК КоллекцияСвойств
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_КоллекцияСвойств_Временная.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ВТ_КоллекцияСвойств_Временная.Имя КАК Имя,
		|	ВТ_КоллекцияСвойств_Временная.ПолноеИмя КАК ПолноеИмя,
		|	ВТ_КоллекцияСвойств_Временная.Синоним КАК Синоним,
		|	ВТ_КоллекцияСвойств_Временная.ЭтоГруппа КАК ЭтоГруппа,
		|	ЕСТЬNULL(СвойстваОбъектовМетаданныхПО.Ссылка, ВТ_КоллекцияСвойств_Временная.ВозможнаяНоваяСсылка) КАК Ссылка,
		|	ЕСТЬNULL(СвойстваОбъектовМетаданныхПО_Родитель.Ссылка,
		|		ВТ_КоллекцияСвойств_Временная_Родитель.ВозможнаяНоваяСсылка) КАК Родитель,
		|	СвойстваОбъектовМетаданныхПО.Ссылка ЕСТЬ NULL КАК ЭтоНовый
		|ПОМЕСТИТЬ ВТ_КоллекцияСвойств
		|ИЗ
		|	ВТ_КоллекцияСвойств_Временная КАК ВТ_КоллекцияСвойств_Временная
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваОбъектовМетаданныхПО КАК СвойстваОбъектовМетаданныхПО
		|		ПО ВТ_КоллекцияСвойств_Временная.ОбъектМетаданных = СвойстваОбъектовМетаданныхПО.Владелец
		|		И ВТ_КоллекцияСвойств_Временная.ПолноеИмя = СвойстваОбъектовМетаданныхПО.ПолноеИмя
		|		И ВТ_КоллекцияСвойств_Временная.ЭтоГруппа = СвойстваОбъектовМетаданныхПО.ЭтоГруппа
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваОбъектовМетаданныхПО КАК СвойстваОбъектовМетаданныхПО_Родитель
		|		ПО ВТ_КоллекцияСвойств_Временная.ОбъектМетаданных = СвойстваОбъектовМетаданныхПО_Родитель.Владелец
		|		И ВТ_КоллекцияСвойств_Временная.РодительПолноеИмя = СвойстваОбъектовМетаданныхПО_Родитель.ПолноеИмя
		|		И СвойстваОбъектовМетаданныхПО_Родитель.ЭтоГруппа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоллекцияСвойств_Временная КАК ВТ_КоллекцияСвойств_Временная_Родитель
		|		ПО ВТ_КоллекцияСвойств_Временная.ОбъектМетаданных = ВТ_КоллекцияСвойств_Временная_Родитель.ОбъектМетаданных
		|		И ВТ_КоллекцияСвойств_Временная.РодительПолноеИмя = ВТ_КоллекцияСвойств_Временная_Родитель.ПолноеИмя
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТ_КоллекцияСвойств_Временная";
		
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СоздатьВТ_ТипыСвойств(ТипыСвойств, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;	
	Запрос.УстановитьПараметр("ТипыСвойств", ТипыСвойств);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТипыСвойств.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ТипыСвойств.ПолноеИмяСвойства КАК ПолноеИмяСвойства,
		|	ТипыСвойств.Тип КАК Тип
		|ПОМЕСТИТЬ ВТ_ТипыСвойств
		|ИЗ
		|	&ТипыСвойств КАК ТипыСвойств";
		
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапроса_НовыеЭлементы()
	
	Возврат
		"ВЫБРАТЬ
		|	ВТ_КоллекцияСвойств.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ВТ_КоллекцияСвойств.Имя КАК Имя,
		|	ВТ_КоллекцияСвойств.ПолноеИмя КАК ПолноеИмя,
		|	ВТ_КоллекцияСвойств.Синоним КАК Синоним,
		|	ВТ_КоллекцияСвойств.ЭтоГруппа КАК ЭтоГруппа,
		|	ВТ_КоллекцияСвойств.Ссылка КАК Ссылка,
		|	ВТ_КоллекцияСвойств.Родитель КАК Родитель
		|ИЗ
		|	ВТ_КоллекцияСвойств КАК ВТ_КоллекцияСвойств
		|ГДЕ
		|	ВТ_КоллекцияСвойств.ЭтоНовый";
	
КонецФункции

Функция ТекстЗапроса_ЭлементыОбновить()
	
	Возврат
		"ВЫБРАТЬ
		|	ВТ_КоллекцияСвойств.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ВТ_КоллекцияСвойств.Ссылка КАК Ссылка,
		|	ВТ_КоллекцияСвойств.ПолноеИмя КАК ПолноеИмя,
		|	ВТ_КоллекцияСвойств.Синоним КАК Синоним
		|ИЗ
		|	ВТ_КоллекцияСвойств КАК ВТ_КоллекцияСвойств
		|ГДЕ
		|	НЕ ВТ_КоллекцияСвойств.ЭтоНовый
		|	И ВТ_КоллекцияСвойств.Синоним <> ВТ_КоллекцияСвойств.Ссылка.Синоним
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВТ_КоллекцияСвойств.ОбъектМетаданных,
		|	ВТ_КоллекцияСвойств.Ссылка,
		|	ВТ_КоллекцияСвойств.ПолноеИмя,
		|	ВТ_КоллекцияСвойств.Синоним
		|ИЗ
		|	ВТ_КоллекцияСвойств КАК ВТ_КоллекцияСвойств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТипыСвойств КАК ВТ_ТипыСвойств
		|		ПО ВТ_ТипыСвойств.ОбъектМетаданных = ВТ_КоллекцияСвойств.ОбъектМетаданных
		|		И ВТ_ТипыСвойств.ПолноеИмяСвойства = ВТ_КоллекцияСвойств.ПолноеИмя
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СвойстваОбъектовМетаданныхПО.Типы СвойстваОбъектовМетаданныхПОТипы
		|		ПО ВТ_ТипыСвойств.ОбъектМетаданных = СвойстваОбъектовМетаданныхПОТипы.Ссылка.Владелец
		|		И ВТ_ТипыСвойств.ПолноеИмяСвойства = СвойстваОбъектовМетаданныхПОТипы.Ссылка.ПолноеИмя
		|		И ВТ_ТипыСвойств.Тип = СвойстваОбъектовМетаданныхПОТипы.Тип
		|ГДЕ
		|	НЕ ВТ_КоллекцияСвойств.ЭтоНовый
		|	И СвойстваОбъектовМетаданныхПОТипы.Тип ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВТ_КоллекцияСвойств.ОбъектМетаданных,
		|	ВТ_КоллекцияСвойств.Ссылка,
		|	ВТ_КоллекцияСвойств.ПолноеИмя,
		|	ВТ_КоллекцияСвойств.Синоним
		|ИЗ
		|	ВТ_КоллекцияСвойств КАК ВТ_КоллекцияСвойств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СвойстваОбъектовМетаданныхПО.Типы СвойстваОбъектовМетаданныхПОТипы
		|		ПО ВТ_КоллекцияСвойств.ОбъектМетаданных = СвойстваОбъектовМетаданныхПОТипы.Ссылка.Владелец
		|		И ВТ_КоллекцияСвойств.Ссылка = СвойстваОбъектовМетаданныхПОТипы.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТипыСвойств КАК ВТ_ТипыСвойств
		|		ПО ВТ_ТипыСвойств.ОбъектМетаданных = СвойстваОбъектовМетаданныхПОТипы.Ссылка.Владелец
		|		И ВТ_ТипыСвойств.ПолноеИмяСвойства = СвойстваОбъектовМетаданныхПОТипы.Ссылка.ПолноеИмя
		|		И ВТ_ТипыСвойств.Тип = СвойстваОбъектовМетаданныхПОТипы.Тип
		|ГДЕ
		|	НЕ ВТ_КоллекцияСвойств.ЭтоНовый
		|	И ВТ_ТипыСвойств.Тип ЕСТЬ NULL";
	
КонецФункции

Функция ТекстЗапроса_НеактуальныеЭлементы()
	
	Возврат
		"ВЫБРАТЬ
		|	СвойстваОбъектовМетаданныхПО.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СвойстваОбъектовМетаданныхПО КАК СвойстваОбъектовМетаданныхПО
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоллекцияСвойств КАК ВТ_КоллекцияСвойств
		|		ПО СвойстваОбъектовМетаданныхПО.Ссылка = ВТ_КоллекцияСвойств.Ссылка
		|ГДЕ
		|	ВТ_КоллекцияСвойств.Ссылка ЕСТЬ NULL";
	
КонецФункции

Функция ТекстЗапроса_ТипыСвойств()
	
	Возврат 
		"ВЫБРАТЬ
		|	ВТ_ТипыСвойств.ОбъектМетаданных КАК ОбъектМетаданных,
		|	ВТ_ТипыСвойств.ПолноеИмяСвойства КАК ПолноеИмяСвойства,
		|	ВТ_ТипыСвойств.Тип КАК Тип
		|ИЗ
		|	ВТ_ТипыСвойств КАК ВТ_ТипыСвойств
		|УПОРЯДОЧИТЬ ПО
		|	ОбъектМетаданных,
		|	ПолноеИмяСвойства";
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция РазделительПакетаЗапросов()
	
	Возврат
		"
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
КонецФункции

Функция ЭтоСсылочныйОбъектМетаданных(ОбъектМетаданных)
	
	Возврат Метаданные.Справочники.Содержит(ОбъектМетаданных)
		Или Метаданные.Документы.Содержит(ОбъектМетаданных)
		Или Метаданные.ПланыВидовХарактеристик.Содержит(ОбъектМетаданных)
		Или Метаданные.ПланыСчетов.Содержит(ОбъектМетаданных)
		Или Метаданные.ПланыВидовРасчета.Содержит(ОбъектМетаданных);
	
КонецФункции

Функция ЭтоРегистр(ОбъектМетаданных)
	
	Возврат Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных)
		Или Метаданные.РегистрыНакопления.Содержит(ОбъектМетаданных)
		Или Метаданные.РегистрыБухгалтерии.Содержит(ОбъектМетаданных)
		Или Метаданные.РегистрыРасчета.Содержит(ОбъектМетаданных);
	
КонецФункции

#КонецОбласти

#КонецОбласти
		
#КонецЕсли